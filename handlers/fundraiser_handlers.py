from aiogram import F, Router, exceptions
from aiogram.exceptions import TelegramBadRequest, TelegramForbiddenError
from aiogram.filters import Command, StateFilter
from aiogram.types import Message, CallbackQuery, FSInputFile
from aiogram.fsm.context import FSMContext

from core import bot, config
from database import db
from filters import IsAdmin
from filters.filters import IsFundraiser
from keyboards import AdminKeyboards, UserKeyboards
from lexicon import LEXICON, callbacks, buttons

router: Router = Router()
router.message.filter(IsFundraiser())
router.callback_query.filter(IsFundraiser())


@router.callback_query(F.data.startswith('fundraiser_payment_confirmation'))
async def fundraiser_payment_confirmation_handler(callback: CallbackQuery):
    registration_id = int(callback.data.split('_')[-1])
    registration = await db.get_registration_by_id(registration_id)

    await callback.message.edit_reply_markup(reply_markup=None)

    if callback.data.split('_')[-2] == 'confirm':
        await db.update_registration_status(registration_id, 'confirmed')
        await db.move_verification_to_verified(callback.from_user.id)

        await callback.answer(
            f'‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '
            f'{("@" + registration.username) if registration.username else registration.user_id} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞\n',
            show_alert=True
        )

        await bot.send_message(
            chat_id=registration.user_id,
            text='‚úÖ –û–ø–ª–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!'
        )

    else:
        await db.update_registration_status(registration_id, 'personal')
        await callback.message.edit_caption(
            caption=(
                f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Å—å —Å —ç—Ç–∏–º –±–æ–ª–≤–∞–Ω–æ–º –ª–∏—á–Ω–æ. –£ –º–µ–Ω—è –Ω–µ –±—ã–ª–æ –≤—Ä–µ–º–µ–Ω–∏ —ç—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å, —Å–æ—Ä–∏\n'
                f'{("@" + registration.username) if registration.username else registration.user_id}\n'
            )
        )
        await bot.send_message(
            chat_id=registration.user_id,
            text=f'<b>ü§ï –ü–æ—Ö–æ–∂–µ, —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ —Å –æ–ø–ª–∞—Ç–æ–π.\n'
                 f'–°–∫–æ—Ä–æ —Å —Ç–æ–±–æ–π —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä: @{callback.from_user.username}</b>'
        )


@router.callback_query(F.data.startswith('fundraiser_transaction_confirmation'))
async def fundraiser_transaction_confirmation_handler(callback: CallbackQuery):
    transaction_id = int(callback.data.split('_')[-1])
    transaction = await db.get_transaction_by_id(transaction_id)
    user = await db.get_user(transaction.user_id)

    if callback.data.split('_')[-2] == 'confirm':
        await db.update_user_balance(user.id, transaction.coins_amount)
        await db.update_transaction_status(transaction_id, 'confirmed')
        await db.move_left_to_confirm_to_confirmed(callback.from_user.id)

        await callback.message.edit_caption(
            caption=f'‚úÖ –ü–æ–∫—É–ø–∫–∞ {transaction.coins_amount} CUETA Coins –Ω–∞ —Å—É–º–º—É {transaction.amount} '
            f'–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {("@" + user.username) if user.username else user.user_id} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞',
            reply_markup=None
        )

        await bot.send_message(
            chat_id=transaction.user_id,
            text=f'‚úÖ –ü–æ–∫—É–ø–∫–∞ {transaction.coins_amount} CUETA Coins –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞',
        )

    else:
        await db.update_transaction_status(transaction_id, 'personal')
        await callback.message.edit_caption(
            caption=(
                f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Å—å —Å —ç—Ç–∏–º –±–æ–ª–≤–∞–Ω–æ–º –ª–∏—á–Ω–æ. –£ –º–µ–Ω—è –Ω–µ –±—ã–ª–æ –≤—Ä–µ–º–µ–Ω–∏ —ç—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å, —Å–æ—Ä–∏\n'
                f'{("@" + user.username) if user.username else user.user_id}\n'
            ), reply_markup=None
        )

        try:
            await bot.send_message(
                chat_id=user.id,
                text=f'<b>ü§ï –ü–æ—Ö–æ–∂–µ, —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ —Å –æ–ø–ª–∞—Ç–æ–π.\n'
                     f'–°–∫–æ—Ä–æ —Å —Ç–æ–±–æ–π —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä: @{callback.from_user.username}</b>'
            )
        except Exception as e:
            print(f'error id 4: {e}')
